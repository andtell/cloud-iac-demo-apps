# when a push is done in another branch than master, create an ecr repository
# associated with this branch and build + push the image
name: ci-npm-docker

on: 
  push:
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-excluding-branches
    # branches-ignore:
    #   - main
    paths:
      - 'vote-app/**'
  pull_request:
    # branches-ignore:
    #   - main
    paths:
      - 'vote-app/**'
  workflow_dispatch:

env: 
  AWS_REGION: eu-north-1
  REGISTRY: ghcr.io
  REPOSITORY: ${{ github.actor }}
  APP: cadec-demo
  # ECR_REPOSITORY: cadec23-demo-${{ github.ref_name }}
  # https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables
  # SHORT_SHA: $(echo ${{ github.sha }} | cut -c 1-8)

jobs:
  build:
    runs-on: ubuntu-latest
    # https://github.com/marketplace/actions/skip-based-on-commit-message#just-use-yaml-recommended
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
    - name: Github variables
      run: |
        echo github.event.ref: ${{ github.event.ref }}
        echo github.ref_type: ${{ github.ref_type }}
        echo github.ref_name: ${{ github.ref_name }}
        echo github.sha: ${{ github.sha }}
        echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
        echo env.SHORT_SHA: ${{ env.SHORT_SHA }}
        
    - name: Clone
      uses: actions/checkout@v3

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        # username: ${{ secrets.DOCKER_HUB_USERNAME }}
        # password: ${{ secrets.DOCKER_HUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: vote-app
        push: true
        build-args: |
          NODE_ENV=${{ github.ref_name }}
          VERSION=${{ env.SHORT_SHA }}
        tags: |
          ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.APP }}:${{ env.SHORT_SHA }}
          ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.APP }}:latest
          

    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1-node16
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: ${{ env.AWS_REGION }}

    # - name: Create repository
    #   # https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ecr/create-repository.html
      
    #   run: |
    #     aws ecr-public create-repository \
    #       --repository-name ${{ env.ECR_REPOSITORY }} \
    #       --query 'repository.repositoryUri' \
    #       --output text \
    #       2>/dev/null
    # - name: Login to Amazon ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v1

    # aws ecr describe-repositories --repository-names ${REPO_NAME} || aws ecr create-repository --repository-name ${REPO_NAME}

    # - name: Login to Public ECR
    #   id: login-public-ecr
    #   uses: docker/login-action@v2
    #   with:
    #     registry: public.ecr.aws/v1g7x3d4/cadec-demo
    #     username: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #   env:
    #     AWS_REGION: ${{ env.AWS_REGION }}

    # - name: Build, tag, and push image to Docker Hub
    #   id: build-image
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-public-ecr.outputs.registry }}
    #     REPOSITORY: "cadec-demo"
      # https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables
      # https://docs.docker.com/engine/reference/commandline/image_build/
      # https://docs.docker.com/engine/reference/commandline/push/
      # run: |
      #   cd kubernetes/demo-app
      #   docker build \
      #     --build-arg NODE_ENV=${{ github.ref_name }} \
      #     --build-arg VERSION=${{ env.SHORT_SHA }} \
      #     --tag ${{ env.ECR_REGISTRY }}/${{ env.REPOSITORY }}:${{ env.SHORT_SHA }} \
      #     --tag ${{ env.ECR_REGISTRY }}/${{ env.REPOSITORY }}:latest \
      #     .
      #   docker push --all-tags ${{ env.ECR_REGISTRY }}/${{ env.REPOSITORY }}
